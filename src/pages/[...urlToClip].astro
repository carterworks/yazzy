---
import BasePage from "../layouts/BasePage.astro";
import { type ReadablePage, clip } from "../services/clipper";
import { isUrl } from "../utils";
export const prerender = false;

const { urlToClip } = Astro.params;

function formatDate(date: Date | undefined): string {
	if (!date) {
		return "";
	}
	return Intl.DateTimeFormat("en-US", {
		year: "numeric",
		month: "2-digit",
		day: "2-digit",
	}).format(date);
}

function getFilename(title: string): string {
	return (
		title
			// make title windows-friendly
			.replace(":", "")
			.replace(/[/\\?%*|"<>]/g, "-")
			// get rid of spaces
			.replace(/\s+/g, "-")
			// lowercase is bestcase
			.toLocaleLowerCase()
	);
}

function generateObsidianUri(
	article: ReadablePage,
	folder = "Clippings/",
	vault = "",
): string {
	const today = formatDate(new Date());
	const fileName = getFilename(article.title);
	const vaultName = vault ? `&vault=${encodeURIComponent(vault)}` : "";

	// Check if there's an author and add brackets
	const authorBrackets = article.author ? `"[[${article.author}]]"` : "";
	const params = {
		category: "[[Clippings]]",
		author: authorBrackets,
		title: article.title,
		url: article.url,
		clipped: today,
		published: formatDate(article.published),
		topics: "",
		tags: article.tags.join(" "),
	};
	let fileContent = "---";
	for (const [key, value] of Object.entries(params)) {
		fileContent += `\n${key}: ${value}`;
	}
	fileContent += `\n---\n\n${article.markdownContent}`;

	return `obsidian://new?file=${encodeURIComponent(folder + fileName)}&content=${encodeURIComponent(fileContent)}${vaultName}`;
}

if (!urlToClip || !isUrl(urlToClip)) {
	return Astro.redirect("404");
}

const article = await clip(new URL(urlToClip));
---

<BasePage title={`${article.title} | yazzy`}>
	<div id="controls" class="flex gap-3 mb-4 items-center">
		<div
			class="border border-arc-focus py-1 px-2 rounded-lg hover:bg-arc-hover active:bg-arc-focus transition bg-transparent text-center"
		>
			<a href={generateObsidianUri(article)} class=""> Save to Obsidian </a>
		</div>
	</div>
	<header class="max-w-prose">
		<h2 class="text-3xl">
			<a href={article.url}>{article.title}</a>
		</h2>
		{article.author && <p class="text-2xl">{article.author}</p>}
	</header>
	<main>
		<article
			class="prose lg:prose-xl font-humanist"
			set:html={article.htmlContent}
		/>
	</main>
</BasePage>
