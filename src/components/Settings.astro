---
import Button from "./Button.astro";

// A few settings:
// * a checkbox to "enable AI summaries",
// * a selector for the "AI model" to use,
// * a text input for the API key.

// when the component loads, it will read the Authorization cookie. If there is a value,
// then that means that "AI summaries" are enabled, and the model and API key will be
// read from the cookie.
// on save, the form will not submit anywhere, but javascript will save the settings into the Authorization cookie
// The authorization cookie is a base64 encoded value of "model=API_KEY", so it will look like "gpt-4o-mini=1234567890"
// (but base64 encoded)
---

<script>
	const form = document.getElementById("settings-form");
	if (!form) {
		throw new Error("Form not found");
	}
	const model: HTMLSelectElement | null =
		form.querySelector("select[name=model]");
	const apiKey: HTMLInputElement | null =
		form.querySelector("input[name=apiKey]");
	if (!model || !apiKey) {
		throw new Error("Form elements not found");
	}

	const cookie = document.cookie
		.split(/;\s*/)
		.find((c) => c.toLocaleLowerCase().startsWith("authorization="));
	if (cookie) {
		const [modelValue, apiKeyValue] = atob(cookie.split("=")[1]).split("=");
		model.value = modelValue;
		apiKey.value = apiKeyValue;
	}

	const statusText = form.querySelector("#status");
	form.addEventListener("submit", (event) => {
		event.preventDefault();
		const apiKeyValue = apiKey.value;
		if (!apiKeyValue) {
			// delete the cookie
			document.cookie = `Authorization=; max-age=0; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=Strict; Secure; Path=/; Domain=${window.location.hostname};`;
			apiKey.value = "";
			return;
		}
		const value = btoa(`${model.value}=${apiKey.value}`);
		document.cookie = `Authorization=${value}; max-age=31536000; SameSite=Strict; Secure; Path=/; Domain=${window.location.hostname};`;
		statusText && statusText.classList.toggle("opacity-100");
		setTimeout(() => {
			statusText && statusText.classList.toggle("opacity-100");
		}, 3000);
	});
</script>
<form class="flex flex-col gap-4 items-start" id="settings-form">
	<label class="flex flex-col items-start">
		<span>AI model</span>
		<select name="model" class="border rounded-md py-1 px-4">
			<option value="gpt-4o-mini">GPT-4o mini</option>
		</select>
	</label>
	<label class="flex flex-col items-start">
		<span>API key</span>
		<input
			type="text"
			name="apiKey"
			class="border focus:border-transparent block w-full rounded-md focus:ring-0 py-1 px-4 transition"
		/>
	</label>
	<div
		id="status"
		class="h-4 -mt-3 transition-opacity opacity-0 dark:text-green-400 text-green-700"
	>
		✔︎ Saved!
	</div>
	<div class="flex items-center gap-2">
		<Button type="submit" class="py-1 px-6">Save</Button>
		<Button
			type="reset"
			class="py-1 px-6 text-red-700 border-red-700 dark:text-red-400 dark:border-red-400"
			>Reset</Button
		>
	</div>
</form>
