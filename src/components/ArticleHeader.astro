---
import type { ReadablePage } from "../types";
import { formatDate } from "../utils";
import AISummary from "./AISummary.astro";

interface Props {
	article: ReadablePage;
	class?: string;
}
const { article, class: baseClasses = "" } = Astro.props;

function generateMetadataNuggets(article: ReadablePage): string[] {
	const articleHostname = new URL(article.url).hostname;
	const metadata = [
		article.author,
		article.published && formatDate(article.published),
		articleHostname,
	].filter((nugget) => !!nugget) as string[];
	return metadata;
}
const willGenerateSummary = Boolean(Astro.cookies.get("Authorization"));
const metadata = generateMetadataNuggets(article);
---

<header class:list={[baseClasses]}>
	<h2 class="text-3xl font-transitional">
		<a href={article.url} class="hover:underline">{article.title}</a>
	</h2>
	<p class="text-sm mt-0.5">
		{metadata.join(" ãƒ» ")}
	</p>
	{
		willGenerateSummary && (
			<AISummary article={article} class="mt-2" server:defer />
		)
	}
</header>
