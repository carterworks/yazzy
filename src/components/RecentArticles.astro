---
import { recentArticleCardClasses } from "../constants";
import { cache } from "../services/cache";

const articleCountAtBuildTime = cache.getArticleCount();
const recentArticlesAtBuildTime = cache.getRecentArticles().map((article) => ({
	...article,
	summary: `${article.summary
		?.replace(/<[^>]*>/g, "")
		.split(/\s+/)
		.slice(0, 20)
		.join(" ")}â€¦`,
}));
---

<script>
	import { recentArticleCardClasses } from "../constants";
	import type { ReadablePage } from "../types";

	async function getArticleCount() {
		try {
			const response = await fetch("/api/articles/count");
			const articles = await response.json();
			return articles.count;
		} catch (error) {
			console.error("Failed to get article count", error);
		}
	}
	async function insertArticleCount() {
		const articlesAtRuntime = await getArticleCount();
		const articleDisplay = document.getElementById("article-count");
		if (!articlesAtRuntime || !articleDisplay) {
			return;
		}
		articleDisplay.textContent = articlesAtRuntime;
	}
	insertArticleCount();
	async function insertRecentArticles() {
		try {
			const response = await fetch("/api/articles/recent");
			const { articles }: { articles: ReadablePage[] } = await response.json();
			const recentArticles = document.getElementById("recent-articles");
			if (!recentArticles) {
				return;
			}
			recentArticles.innerHTML = "";
			articles.forEach((article) => {
				const li = document.createElement("li");
				li.className = recentArticleCardClasses;
				li.innerHTML = `
					<a class="" href="/${article.url}">
						<h3 class="font-transitional">${article.title}</h3>
						<p class="text-xs my-1 truncate">${new URL(article.url).hostname}</p>
						<p class="text-xs">${article.summary}</p>
					</a>
				`;
				recentArticles.appendChild(li);
			});
		} catch (error) {
			console.error("Failed to get recent articles", error);
		}
	}
	insertRecentArticles();
</script>
<section>
	<h2 class="text-lg font-transitional mb-2">What people are reading.</h2>
	<ol
		id="recent-articles"
		class="flex flex-column lg:flex-row flex-wrap gap-2 justify-between"
	>
		{
			recentArticlesAtBuildTime.map((article) => (
				<li class={recentArticleCardClasses}>
					<a href={`/${article.url}`}>
						<h3 class="font-transitional">{article.title}</h3>
						<p class="text-xs my-1 truncate">{new URL(article.url).hostname}</p>
						<p class="text-xs">{article.summary}</p>
					</a>
				</li>
			))
		}
	</ol>
	<p class="">
		Articles archived: <span id="article-count">{articleCountAtBuildTime}</span
		>.
	</p>
</section>
