@import "tailwindcss";

@theme {
	--color-button: ButtonFace;
	--color-button-text: ButtonText;
	--color-canvas: Canvas;
	--color-canvas-text: CanvasText;

	/* System Font Stack—https://github.com/system-fonts/modern-font-stacks */
	--font-system: "system-ui", "sans-serif";
	--font-transitional: "Charter", "'Bitstream Charter'", "'Sitka Text'",
		"Cambria", "serif";
	--font-old-style: "'Iowan Old Style'", "'Palatino Linotype'",
		"'URW Palladio L'", "P052", "serif";
	--font-humanist: "Seravek", "'Gill Sans Nova'", "Ubuntu", "Calibri",
		"'DejaVu Sans'", "source-sans-pro", "sans-serif";
	--font-gemoetric-humanist: "Avenir", "Montserrat", "Corbel", "'URW Gothic'",
		"source-sans-pro", "sans-serif";
	--font-classical-humanist: "Optima", "Candara", "'Noto Sans'",
		"source-sans-pro", "sans-serif";
	--font-neo-grotesque: "Inter", "Roboto", "'Helvetica Neue'", "'Arial Nova'",
		"'Nimbus Sans'", "Arial", "sans-serif";
	--font-monospace-slab-serif: "'Nimbus Mono PS'", "'Courier New'", "monospace";
	--font-monospace-code: "ui-monospace", "'Cascadia Code'", "'Source Code Pro'",
		"Menlo", "Consolas", "'DejaVu Sans Mono'", "monospace";
	--font-industrial: "Bahnschrift", "'DIN Alternate'",
		"'Franklin Gothic Medium'", "'Nimbus Sans Narrow'", "sans-serif-condensed",
		"sans-serif";
	--font-rounded-sans: "ui-rounded", "'Hiragino Maru Gothic ProN'", "Quicksand",
		"Comfortaa", "Manjari", "'Arial Rounded MT'", "'Arial Rounded MT Bold'",
		"Calibri", "source-sans-pro", "sans-serif";
	--font-slab-serif: "Rockwell", "'Rockwell Nova'", "'Roboto Slab'",
		"'DejaVu Serif'", "'Sitka Small'", "serif";
	--font-antique: "Superclarendon", "'Bookman Old Style'", "'URW Bookman'",
		"'URW Bookman L'", "'Georgia Pro'", "Georgia", "serif";
	--font-didone: "Didot", "'Bodoni MT'", "'Noto Serif Display'",
		"'URW Palladio L'", "P052", "Sylfaen", "serif";
	--font-handwritten: "'Segoe Print'", "'Bradley Hand'", "Chilanka",
		"TSCu_Comic", "casual", "cursive";
	--font-emoji: "'Apple Color Emoji'", "'Segoe UI Emoji'", "'Segoe UI Symbol'",
		"'Noto Color Emoji'";

	/* Flexoki—https://stephango.com/flexoki */
	/* Base */
	--color-base-0: #fffcf0;
	--color-paper: var(--color-base-0);
	--color-base-50: #f2f0e5;
	--color-base-100: #e6e4d9;
	--color-base-150: #dad8ce;
	--color-base-200: #cecdc3;
	--color-base-300: #b7b5ac;
	--color-base-400: #9f9d96;
	--color-base-500: #878580;
	--color-base-600: #6f6e69;
	--color-base-700: #575653;
	--color-base-800: #403e3c;
	--color-base-850: #343331;
	--color-base-900: #282726;
	--color-base-950: #1c1b1a;
	--color-base-1000: #100f0f;
	--color-black: var(--color-base-1000);

	/* Red */
	--color-red-50: #ffe1d5;
	--color-red-100: #ffcabb;
	--color-red-150: #fdb2a2;
	--color-red-200: #f89a8a;
	--color-red-300: #e8705f;
	--color-red-400: #d14d41;
	--color-red-500: #c03e35;
	--color-red-600: #af3029;
	--color-red-700: #942822;
	--color-red-800: #6c201c;
	--color-red-850: #551b18;
	--color-red-900: #3e1715;
	--color-red-950: #261312;

	/* Orange */
	--color-orange-50: #ffe1d5;
	--color-orange-100: #ffcabb;
	--color-orange-150: #fdb2a2;
	--color-orange-200: #f89a8a;
	--color-orange-300: #e8705f;
	--color-orange-400: #d14d41;
	--color-orange-500: #c03e35;
	--color-orange-600: #af3029;
	--color-orange-700: #942822;
	--color-orange-800: #6c201c;
	--color-orange-850: #551b18;
	--color-orange-900: #3e1715;
	--color-orange-950: #261312;

	/* Yellow */
	--color-yellow-50: #faeec6;
	--color-yellow-100: #f6e2a0;
	--color-yellow-150: #f1d67e;
	--color-yellow-200: #eccb60;
	--color-yellow-300: #dfb431;
	--color-yellow-400: #d0a215;
	--color-yellow-500: #be9207;
	--color-yellow-600: #ad8301;
	--color-yellow-700: #8e6b01;
	--color-yellow-800: #664d01;
	--color-yellow-850: #503d02;
	--color-yellow-900: #3a2d04;
	--color-yellow-950: #241e08;

	/* Green */
	--color-green-50: #edeecf;
	--color-green-100: #dde2b2;
	--color-green-150: #cdd597;
	--color-green-200: #bec97e;
	--color-green-300: #a0af54;
	--color-green-400: #879a39;
	--color-green-500: #768d21;
	--color-green-600: #66800b;
	--color-green-700: #536907;
	--color-green-800: #3d4c07;
	--color-green-850: #313d07;
	--color-green-900: #252d09;
	--color-green-950: #1a1e0c;

	/* Cyan */
	--color-cyan-50: #ddf1e4;
	--color-cyan-100: #bfe8d9;
	--color-cyan-150: #a2dece;
	--color-cyan-200: #87d3c3;
	--color-cyan-300: #5abdac;
	--color-cyan-400: #3aa99f;
	--color-cyan-500: #2f968d;
	--color-cyan-600: #24837b;
	--color-cyan-700: #1c6c66;
	--color-cyan-800: #164f4a;
	--color-cyan-850: #143f3c;
	--color-cyan-900: #122f2c;
	--color-cyan-950: #101f1d;

	/* Blue */
	--color-blue-50: #e1eceb;
	--color-blue-100: #c6dde8;
	--color-blue-150: #abcfe2;
	--color-blue-200: #92bfdb;
	--color-blue-300: #66a0c8;
	--color-blue-400: #4385be;
	--color-blue-500: #3171b2;
	--color-blue-600: #205ea6;
	--color-blue-700: #1a4f8c;
	--color-blue-800: #163b66;
	--color-blue-850: #133051;
	--color-blue-900: #12253b;
	--color-blue-950: #101a24;

	/* Purple */
	--color-purple-50: #f0eaec;
	--color-purple-100: #e2d9e9;
	--color-purple-150: #d3cae6;
	--color-purple-200: #c4b9e0;
	--color-purple-300: #a699d0;
	--color-purple-400: #8b7ec8;
	--color-purple-500: #735eb5;
	--color-purple-600: #5e409d;
	--color-purple-700: #4f3685;
	--color-purple-800: #3c2a62;
	--color-purple-850: #31234e;
	--color-purple-900: #261c39;
	--color-purple-950: #1a1623;

	/* Magenta */
	--color-magenta-50: #fee4e5;
	--color-magenta-100: #fccfda;
	--color-magenta-150: #f9b9cf;
	--color-magenta-200: #f4a4c2;
	--color-magenta-300: #e47da8;
	--color-magenta-400: #ce5d97;
	--color-magenta-500: #b74583;
	--color-magenta-600: #a02f6f;
	--color-magenta-700: #87285e;
	--color-magenta-800: #641f46;
	--color-magenta-850: #4f1b39;
	--color-magenta-900: #39172b;
	--color-magenta-950: #24131d;

	/* 
 * Base color
 * Flexoki uses warm monochromatic base values that blend the black value with 
 * the paper value. 8 values are used in light and dark mode:
 * 
 * - 3 text values: normal, muted, faint
 * - 3 interface values: normal, hover, active
 * - 2 background values: primary, secondary
 */
	/* --color-tx: light-dark(var(--color-black), var(--color-base-200));
 --color-tx-2: light-dark(var(--color-base-600), var(--color-base-500));
 --color-tx-3: light-dark(var(--color-base-300), var(--color-base-700));
 --color-ui-3: light-dark(var(--color-base-200), var(--color-base-800));
 --color-ui-2: light-dark(var(--color-base-150), var(--color-base-850));
 --color-ui: light-dark(var(--color-base-100), var(--color-base-900));
 --color-bg-2: light-dark(var(--color-base-50), var(--color-base-950));
 --color-bg: light-dark(var(--color-paper), var(--color-black)); */

	/*
 * Accent colors
 * 8 accent colors are available for accents and syntax highlighting. Unlike the
 * base values, accent values cannot be derived using opacity because this
 * desaturates the pigment effect. Use the extended palette for the full range
 * of values.
 *
 * The following 16 values are the main accent values used for syntax
 * highlighting and interface elements like buttons and links. Light themes
 * should use 600 for syntax highlighted text, dark themes should use 400.
 */
	/* --color-re: light-dark(var(--color-red-600), var(--color-red-400));
 --color-re-2: light-dark(var(--color-red-400), var(--color-red-600));
 --color-or: light-dark(var(--color-orange-600), var(--color-orange-400));
 --color-or-2: light-dark(var(--color-orange-400), var(--color-orange-600));
 --color-ye: light-dark(var(--color-yellow-600), var(--color-yellow-400));
 --color-ye-2: light-dark(var(--color-yellow-400), var(--color-yellow-600));
 --color-gr: light-dark(var(--color-green-600), var(--color-green-400));
 --color-gr-2: light-dark(var(--color-green-400), var(--color-green-600));
 --color-cy: light-dark(var(--color-cyan-600), var(--color-cyan-400));
 --color-cy-2: light-dark(var(--color-cyan-400), var(--color-cyan-600));
 --color-bl: light-dark(var(--color-blue-600), var(--color-blue-400));
 --color-bl-2: light-dark(var(--color-blue-400), var(--color-blue-600));
 --color-pu: light-dark(var(--color-purple-600), var(--color-purple-400));
 --color-pu-2: light-dark(var(--color-purple-400), var(--color-purple-600));
 --color-ma: light-dark(var(--color-magenta-600), var(--color-magenta-400));
 --color-ma-2: light-dark(var(--color-magenta-400), var(--color-magenta-600)); */

	--spring-easing: linear(
		0,
		0.0346 2.07%,
		0.14066 4.43%,
		0.93834 16.722%,
		1.07743 20.432%,
		1.14934 24.312%,
		1.16294 26.953%,
		1.15356 29.933%,
		1.01677 43.094%,
		0.9766 50.995%,
		0.97488 57.056%,
		1.00329 76.878%,
		0.99996
	);
	/* Custom, springy spin animation */
	--animate-springy-spin: springy-spin 1.5s var(--spring-easing) infinite;
	@keyframes springy-spin {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(180deg);
		}
	}
}
/**
 * From Tailwindcss.com typography.css, with Flexoki variables
 * https://github.com/tailwindlabs/tailwindcss.com/blob/main/src/app/typography.css
 */
.prose {
	/* --tw-prose-body: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-headings: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-lead: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-links: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-bold: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-counters: light-dark(var(--color-base-300), var(--color-base-700));
	--tw-prose-bullets: light-dark(var(--color-base-300), var(--color-base-700));
	--tw-prose-hr: light-dark(var(--color-base-200), var(--color-base-800));
	--tw-prose-quotes: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-quote-borders: light-dark(
		var(--color-base-200),
		var(--color-base-800)
	);
	--tw-prose-captions: light-dark(var(--color-base-600), var(--color-base-500));
	--tw-prose-kbd: light-dark(var(--color-base-100), var(--color-base-850));
	--tw-prose-kbd-shadows: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-code: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-pre-code: light-dark(var(--color-black), var(--color-base-200));
	--tw-prose-pre-bg: light-dark(var(--color-base-50), var(--color-base-950));
	--tw-prose-th-borders: light-dark(
		var(--color-base-200),
		var(--color-base-800)
	);
	--tw-prose-td-borders: light-dark(
		var(--color-base-200),
		var(--color-base-800)
	); */

	--prose-color: light-dark(var(--color-black), var(--color-base-200));
	--prose-heading-color: var(--prose-color);
	--prose-strong-color: var(--prose-color);
	--prose-link-color: var(--prose-color);
	--prose-code-color: var(--prose-color);
	--prose-marker-color: var(--prose-color);
	--prose-link-underline-color: var(--prose-color);
	--prose-th-borders: var(--prose-color);
	--prose-td-borders: var(--prose-color);
	--prose-hr-color: var(--prose-color);
	--prose-blockquote-border-color: var(--prose-color);

	color: var(--prose-color);
	font-size: var(--text-sm);
	line-height: 2;

	*:where(:not(.not-prose, .not-prose *) + *:where(.not-prose, .not-prose *)) {
		margin-top: calc(var(--spacing) * 6);
	}

	*:where(:not(.not-prose, .not-prose *))
		+ *:where(:not(.not-prose, .not-prose *)) {
		margin-top: calc(var(--spacing) * 6);
	}

	h2:where(:not(.not-prose, .not-prose *)) {
		font-size: var(--text-lg);
		line-height: calc(28 / 18);
		letter-spacing: -0.025em;
		color: var(--prose-code-color);
		font-weight: var(--font-weight-semibold);
		margin-top: calc(var(--spacing) * 20);
	}

	h2:has(+ h3):where(:not(.not-prose, .not-prose *)) {
		font-size: var(--text-xs);
		line-height: 2;
		font-weight: var(--font-weight-medium);
		font-family: var(--font-mono);
		font-variant-ligatures: none;
		letter-spacing: 0.1em;
		color: var(--prose-color);
		text-transform: uppercase;
	}

	h3:where(:not(.not-prose, .not-prose *)) {
		font-size: var(--text-base);
		line-height: calc(28 / 18);
		color: var(--prose-heading-color);
		font-weight: var(--font-weight-semibold);
		margin-top: calc(var(--spacing) * 16);
	}

	h2 + h3:where(:not(.not-prose, .not-prose *)) {
		margin-top: calc(var(--spacing) * 6);
	}

	h4:where(:not(.not-prose, .not-prose *)) {
		font-size: var(--text-sm);
		line-height: calc(28 / 14);
		color: var(--prose-heading-color);
		font-weight: var(--font-weight-semibold);
		margin-top: calc(var(--spacing) * 12);
	}

	:is(h2, h3, h4):where(:not(.not-prose, .not-prose *)) {
		scroll-margin-top: calc(var(--spacing) * 32);
		@variant lg {
			scroll-margin-top: calc(var(--spacing) * 18);
		}
	}

	ul:where(:not(.not-prose, .not-prose *)) {
		padding-left: calc(var(--spacing) * 6);
		list-style-type: square;
	}

	ul li:where(:not(.not-prose, .not-prose *)) {
		padding-left: calc(var(--spacing) * 3);
	}

	ul li + li:where(:not(.not-prose, .not-prose *)) {
		margin-top: calc(var(--spacing) * 4);
	}

	ul li:where(:not(.not-prose, .not-prose *))::marker {
		color: var(--prose-marker-color);
	}

	a:not(:where(:is(h2, h3, h4) *)):where(:not(.not-prose, .not-prose *)) {
		color: var(--prose-link-color);
		font-weight: var(--font-weight-semibold);
		text-decoration: underline;
		text-underline-offset: 3px;
		text-decoration-color: var(--prose-link-underline-color);
		text-decoration-thickness: 1px;
		& code {
			font-weight: var(--font-weight-semibold);
		}
	}

	a:hover:where(:not(.not-prose, .not-prose *)) {
		text-decoration-thickness: 2px;
	}

	strong:where(:not(.not-prose, .not-prose *)) {
		color: var(--prose-strong-color);
		font-weight: var(--font-weight-semibold);
	}

	code:where(:not(.not-prose, .not-prose *)) {
		font-variant-ligatures: none;
		font-family: var(--font-mono);
		font-weight: var(--font-weight-medium);
		color: var(--prose-code-color);
	}

	:where(h2, h3, h4) code:where(:not(.not-prose, .not-prose *)) {
		font-weight: var(--font-weight-semibold);
	}

	code:where(:not(.not-prose, .not-prose *))::before,
	code:where(:not(.not-prose, .not-prose *))::after {
		display: inline;
		content: "`";
	}

	pre:where(:not(.not-prose, .not-prose *)) {
		margin-top: calc(var(--spacing) * 4);
		margin-bottom: calc(var(--spacing) * 10);
	}

	pre code * + *:where(:not(.not-prose, .not-prose *)) {
		margin-top: 0;
	}

	pre code:where(:not(.not-prose, .not-prose *))::before,
	pre code:where(:not(.not-prose, .not-prose *))::after {
		content: none;
	}

	pre code:where(:not(.not-prose, .not-prose *)) {
		font-variant-ligatures: none;
		font-family: var(--font-mono);
		font-size: var(--text-sm);
		line-height: 2;
	}

	table:where(:not(.not-prose, .not-prose *)) {
		width: 100%;
		table-layout: auto;
		margin-top: 2em;
		margin-bottom: 2em;
		font-size: var(--text-sm);
		line-height: 1.4;
	}

	thead:where(:not(.not-prose, .not-prose *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--prose-th-borders);
	}

	thead th:where(:not(.not-prose, .not-prose *)) {
		color: var(--prose-heading-color);
		font-weight: 600;
		vertical-align: bottom;
		padding-inline-end: 0.6em;
		padding-bottom: 0.8em;
		padding-inline-start: 0.6em;
	}

	thead th:first-child:where(:not(.not-prose, .not-prose *)) {
		padding-inline-start: 0;
	}

	thead th:last-child:where(:not(.not-prose, .not-prose *)) {
		padding-inline-end: 0;
	}

	tbody tr:where(:not(.not-prose, .not-prose *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--prose-td-borders);
	}

	tbody tr:last-child:where(:not(.not-prose, .not-prose *)) {
		border-bottom-width: 0;
	}

	tbody td:where(:not(.not-prose, .not-prose *)) {
		vertical-align: baseline;
	}

	tfoot:where(:not(.not-prose, .not-prose *)) {
		border-top-width: 1px;
		border-top-color: var(--prose-th-borders);
	}

	tfoot td:where(:not(.not-prose, .not-prose *)) {
		vertical-align: top;
	}

	tbody td:where(:not(.not-prose, .not-prose *)),
	tfoot td:where(:not(.not-prose, .not-prose *)) {
		padding-top: 0.8em;
		padding-inline-end: 0.6em;
		padding-bottom: 0.8em;
		padding-inline-start: 0.6em;
	}

	tbody td:first-child:where(:not(.not-prose, .not-prose *)),
	tfoot td:first-child:where(:not(.not-prose, .not-prose *)) {
		padding-inline-start: 0;
	}

	tbody td:last-child:where(:not(.not-prose, .not-prose *)),
	tfoot td:last-child:where(:not(.not-prose, .not-prose *)) {
		padding-inline-end: 0;
	}

	th:where(:not(.not-prose, .not-prose *)),
	td:where(:not(.not-prose, .not-prose *)) {
		text-align: start;
	}

	td code:where(:not(.not-prose, .not-prose *)) {
		font-size: 0.8125rem;
	}

	hr:where(:not(.not-prose, .not-prose *)) {
		border-color: var(--prose-hr-color);
		margin-block: --spacing(16);
		& + h2 {
			margin-top: --spacing(16);
		}
	}

	blockquote {
		font-style: italic;
		border-inline-start-width: 0.25rem;
		border-inline-start-color: var(--prose-blockquote-border-color);
		padding-inline-start: calc(var(--spacing) * 4);
	}

	blockquote p:first-of-type::before {
		content: open-quote;
	}

	blockquote p:last-of-type::after {
		content: close-quote;
	}

	figure:where(:not(.not-prose, .not-prose *)) {
		figcaption:where(:not(.not-prose, .not-prose *)) {
			margin-top: calc(var(--spacing) * 3);
			text-align: center;
			font-size: var(--text-sm);
			line-height: var(--text-sm--line-height);
			font-style: italic;
			color: color-mix(in oklab, var(--prose-color) 75%, transparent);
		}
	}

	:first-child:where(:not(.not-prose, .not-prose *)) {
		margin-top: 0;
	}

	:last-child:where(:not(.not-prose, .not-prose *)) {
		margin-bottom: 0;
	}
}

.prose-blog {
	img:where(:not(.not-prose, .not-prose *)) {
		/** biome-ignore lint/correctness/noUnknownFunction: tailwind */
		@media (max-width: theme(--breakpoint-sm)) {
			margin-inline: calc(var(--spacing) * -4);
			max-width: calc(100% + calc(var(--spacing) * 8));
		}
	}
}

:root {
	@apply scroll-smooth scheme-light-dark;
}
.primary {
	fill: light-dark(var(--color-black), var(--color-base-200));
}
.secondary {
	fill: light-dark(var(--color-base-600), var(--color-base-500));
}
::backdrop {
	@apply backdrop-brightness-75 dark:backdrop-brightness-50;
}
